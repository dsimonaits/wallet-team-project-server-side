{
  "openapi": "3.0.2",
  "info": {
    "title": "Wallet",
    "description": "The application for count money",
    "version": "1.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit-0/"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http//localhost/3000" },
    { "url": "https://wallet-team-project-hg8k.onrender.com" }
  ],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    { "name": "Transaction", "description": "Transactions endpoints" }
  ],
  "paths": {
    "/api/user/signup": {
      "post": {
        "tags": ["Auth"],
        "summary ": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "new user created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "was registered before",
            "content": {}
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": ["Auth"],
        "summary ": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect login or password",
            "content": {}
          }
        }
      }
    },
    "/api/user/logout": {
      "post": {
        "tags": ["Auth"],
        "summary ": "Logout user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout success response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary ": "User token refresh",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["Auth"],
        "summary ": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {}
          }
        }
      }
    },
    "/api/user/google": {
      "get": {
        "tags": ["Auth"],
        "summary ": "Google auth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googleAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/api/transaction/create": {
      "post": {
        "tags": ["Transaction"],
        "summary ": "Create transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/transaction/update/": {
      "put": {
        "tags": ["Transaction"],
        "summary ": "Update transaction",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "description": "Transaction id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/transaction/getAll": {
      "get": {
        "tags": ["Transaction"],
        "summary ": "Get all transactions",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Without only first 5 transactions sorted from new to old"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTransactionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/category": {
      "get": {
        "tags": ["Transaction"],
        "summary ": "Get categories array",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Categories array",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/delete": {
      "delete": {
        "tags": ["Transaction"],
        "summary ": "Delete transaction by id",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/statistic": {
      "post": {
        "tags": ["Transaction"],
        "summary ": "Get statistic",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetStatisticRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction statistic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/currenciesApi": {
      "get": {
        "tags": ["Transaction"],
        "summary ": "Get currencies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Currencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCurrenciesResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex Solt"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Registration token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzMwMGYyMGZmMGY4MDRjMDk4OTQyNSIsIm5hbWUiOiJBbmRyaWkiLCJpYXQiOjE2ODEwNjQxNzgsImV4cCI6MTY4MTA2Nzc3OH0.Pu-AXK4wQULw3Oq4SxCStkpps-mQPEYNUplI4E9K7WU"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex Solt"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": "3000"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token, automatically save to the cookies",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzMwMGYyMGZmMGY4MDRjMDk4OTQyNSIsIm5hbWUiOiJBbmRyaWkiLCJpYXQiOjE2ODEwNjQxNzgsImV4cCI6MTY4MTA2Nzc3OH0.Pu-AXK4wQULw3Oq4SxCStkpps-mQPEYNUplI4E9K7WU"
          },
          "_id": {
            "type": "string",
            "description": "User id",
            "example": "6439da094bf2bf5032861e1c"
          },
          "isActivated": {
            "type": "boolean",
            "description": "Is user confirm his password"
          },
          "createdAt": {
            "type": "date",
            "description": "Date when user create account",
            "example": "2023-04-14T22:52:06.585+00:00"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Login token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzMwMGYyMGZmMGY4MDRjMDk4OTQyNSIsIm5hbWUiOiJBbmRyaWkiLCJpYXQiOjE2ODEwNjQxNzgsImV4cCI6MTY4MTA2Nzc3OH0.Pu-AXK4wQULw3Oq4SxCStkpps-mQPEYNUplI4E9K7WU"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex Solt"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": "3000"
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token, automatically save to the cookies",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzMwMGYyMGZmMGY4MDRjMDk4OTQyNSIsIm5hbWUiOiJBbmRyaWkiLCJpYXQiOjE2ODEwNjQxNzgsImV4cCI6MTY4MTA2Nzc3OH0.Pu-AXK4wQULw3Oq4SxCStkpps-mQPEYNUplI4E9K7WU"
          },
          "_id": {
            "type": "string",
            "description": "User id",
            "example": "6439da094bf2bf5032861e1c"
          },
          "isActivated": {
            "type": "boolean",
            "description": "Is user confirm his password"
          },
          "createdAt": {
            "type": "date",
            "description": "Date when user create account",
            "example": "2023-04-14T22:52:06.585+00:00"
          }
        }
      },
      "LogoutResponse": {
        "type": "object"
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token, automatically save to the cookies",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzMwMGYyMGZmMGY4MDRjMDk4OTQyNSIsIm5hbWUiOiJBbmRyaWkiLCJpYXQiOjE2ODEwNjQxNzgsImV4cCI6MTY4MTA2Nzc3OH0.Pu-AXK4wQULw3Oq4SxCStkpps-mQPEYNUplI4E9K7WU"
          },
          "accessToken": {
            "type": "string",
            "description": "Login token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzMwMGYyMGZmMGY4MDRjMDk4OTQyNSIsIm5hbWUiOiJBbmRyaWkiLCJpYXQiOjE2ODEwNjQxNzgsImV4cCI6MTY4MTA2Nzc3OH0.Pu-AXK4wQULw3Oq4SxCStkpps-mQPEYNUplI4E9K7WU"
          }
        }
      },
      "CreateTransactionRequest": {
        "type": "object",
        "required": ["type", "sum", "date"],
        "properties": {
          "type": {
            "type": "boolean",
            "description": "true = income, false = outcome",
            "example": true
          },
          "sum": {
            "type": "number",
            "description": "transaction sum, only 2 numbers after dot",
            "example": 300
          },
          "category": {
            "type": "string",
            "description": "transaction category: only for outcome!",
            "example": "Car"
          },
          "date": {
            "type": "string",
            "description": "Transaction date in format: year-month-day",
            "example": "2023-04-19T12:12:12.000Z"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "Fix car"
          }
        }
      },
      "CreateTransactionResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "boolean",
            "description": "true = income, false = outcome",
            "example": true
          },
          "sum": {
            "type": "number",
            "description": "transaction sum",
            "example": 300
          },
          "category": {
            "type": "string",
            "description": "transaction category: only for outcome!",
            "example": "Car"
          },
          "date": {
            "type": "string",
            "description": "Transaction date in format: year-month-day",
            "example": "2023-04-19T12:12:12.000Z"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "Fix car"
          },
          "_id": {
            "type": "string",
            "description": "Transaction id",
            "example": "643192af26c67d154c63ff48"
          }
        }
      },
      "UpdateTransactionRequest": {
        "type": "object",
        "required": ["type", "sum", "date"],
        "properties": {
          "type": {
            "type": "boolean",
            "description": "true = income, false = outcome",
            "example": true
          },
          "sum": {
            "type": "number",
            "description": "transaction sum, only 2 numbers after dot",
            "example": 300
          },
          "category": {
            "type": "string",
            "description": "transaction category: only for outcome!",
            "example": "Car"
          },
          "date": {
            "type": "string",
            "description": "Transaction date in format: year-month-day",
            "example": "2023-04-19T12:12:12.000Z"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "Fix car"
          }
        }
      },
      "UpdateTransactionResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "boolean",
            "description": "true = income, false = outcome",
            "example": true
          },
          "sum": {
            "type": "number",
            "description": "transaction sum",
            "example": 300
          },
          "category": {
            "type": "string",
            "description": "transaction category: only for outcome!",
            "example": "Car"
          },
          "date": {
            "type": "string",
            "description": "Transaction date in format: year-month-day",
            "example": "2023-01-13T11:20:00.000Z"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "Fix car"
          },
          "_id": {
            "type": "string",
            "description": "Transaction id",
            "example": "643192af26c67d154c63ff48"
          }
        },
        "balance": {
          "type": "number",
          "description": "User balance",
          "example": 3000
        }
      },
      "GetAllTransactionsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "boolean",
              "description": "true = income, false = outcome",
              "example": true
            },
            "sum": {
              "type": "number",
              "description": "transaction sum",
              "example": 300
            },
            "category": {
              "type": "string",
              "description": "transaction category: only for outcome!",
              "example": "Car"
            },
            "date": {
              "type": "string",
              "description": "Transaction date in format: year-month-day",
              "example": "2023-04-12"
            },
            "comment": {
              "type": "string",
              "description": "Transaction comment",
              "example": "Fix car"
            },
            "_id": {
              "type": "string",
              "description": "Transaction id",
              "example": "643192af26c67d154c63ff48"
            }
          }
        }
      },
      "GetCategoryResponse": {
        "type": "array",
        "items": ["string"]
      },
      "DeleteTransactionRequest": {
        "type": "object",
        "required": ["_id"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Transaction id",
            "example": "64317ec050d38b59cdd0221d"
          }
        }
      },
      "DeleteTransactionResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User balance",
            "example": 3400
          },
          "sum": {
            "type": "number",
            "description": "Sum of deleted transaction",
            "example": 230
          }
        }
      },
      "getCurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@mail.com"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex Solt"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": "3000"
          },
          "createdAt": {
            "type": "date",
            "description": "Date and time when user was created",
            "example": "2023-04-17T18:11:08.566Z"
          }
        }
      },
      "googleAuthResponse": {
        "type": "string",
        "properties": {
          "token": {
            "type": "string",
            "name": "token",
            "description": "Token will be in response http string"
          }
        }
      },
      "GetStatisticRequest": {
        "type": "object",
        "required": ["month", "year"],
        "properties": {
          "month": {
            "type": "number",
            "description": "Month ",
            "example": 4
          },
          "year": {
            "type": "number",
            "description": "Year",
            "example": 2023
          }
        }
      },
      "GetStatisticResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "totalSum": {
                  "type": "number",
                  "description": "Total sum of category",
                  "example": 3400
                },
                "category": {
                  "type": "string",
                  "description": "Category",
                  "example": "Car"
                }
              }
            }
          },
          "transaction": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "boolean",
                  "description": "Income or outcome",
                  "example": true
                },
                "sum": {
                  "type": "number",
                  "description": "Total sum of type transaction",
                  "example": 43000
                }
              }
            }
          }
        }
      },
      "getCurrenciesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "currencyCodeA": {
              "type": "number",
              "description": "",
              "example": 840
            },
            "currencyCodeB": {
              "type": "number",
              "description": "",
              "example": 300
            },
            "rateBuy": {
              "type": "number",
              "description": "",
              "example": 36.65
            },
            "date": {
              "type": "string",
              "description": "",
              "example": "1681164074"
            },
            "rateCross": {
              "type": "number",
              "description": "",
              "example": 0
            },
            "rateSell": {
              "type": "number",
              "description": "",
              "example": "37.4406"
            }
          }
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "schema": "Bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
}
